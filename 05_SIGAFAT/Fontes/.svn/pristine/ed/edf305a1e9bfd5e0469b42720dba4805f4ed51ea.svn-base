#Include 'Protheus.ch'
#include "Fileio.ch"
#Include 'TBICONN.ch'

Static _cArqLog     := ''
Static _lSimulacao  := .T.

//+---------------------------------------------------------------------------
// Rotina de ajuste de grupo de tributação por Origem, Ex NCM e NCM
//+---------------------------------------------------------------------------
User Function M05D02U()
    Local   _aSays          := {}
    Local   _aButton        := {}
    Local   _cTitulo        := Substr(FunName(),3,20)
    Private _lSimulacao := .T.

    _lSimulacao := MsgYesNo('Deseja executar em modo SIMULAÇÃO?','Atenção')

    If _lSimulacao
        AADD(_aSays,OemToAnsi('!!! SIMULAÇÃO !!! '                                              ))
    EndIf

    AADD(_aSays,OemToAnsi("Atualização do grupo tributário de acordo com as seguintes regras:"  ))
    AADD(_aSays,OemToAnsi(" REGRAS:"                                                            ))
    AADD(_aSays,OemToAnsi(" - se ORIGEM IGUAL a 1, atualizar utilizando YD_XGRIMP"              ))
    AADD(_aSays,OemToAnsi(" - se ORIGEM IGUAL a 8 e Tipo PA, atualizar utilizando YD_XGRTRIB"   ))
    AADD(_aSays,OemToAnsi(" - se ORIGEM IGUAL a 2,3 ou 8, atualizar utilizando YD_XGRREVE"      ))
    AADD(_aSays,OemToAnsi(" - DEMAIS atualizar utilizando YD_XGRTRIB"                           ))

    aAdd( _aButton, { 1, .T., {|| Processa( {|| MD05Ok() }, "Aguarde...", "",.F.),FechaBatch()}})
    aAdd( _aButton, { 2, .T., {|| FechaBatch()                  }}  )

    FormBatch( _cTitulo, _aSays, _aButton )

    _cArqLog        := ''
Return

//+-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Static Function MD05Ok()
    Local _oDlg         := Nil
    Local _cTitle       := 'Atualização de Grupo Tributário'
    Local _oArqOri      := Nil
    Local _oArqLog      := Nil

    If _lSimulacao
        _cTitle += OemToAnsi(' *** SIMULAÇÃO *** ')
    EndIf

    Define MsDialog _oDlg Title _cTitle Style DS_MODALFRAME From 000,000 To 300,900 Pixel

    @040,020 Say  'Arquivo Log:' Of _oDlg Pixel
    @037,080 Get _oArqLog Var _cArqLog Size 300,010 Of _oDlg Pixel WHEN .F.

    @037,400 BUTTON "Selec. Arquivo"    SIZE 040, 015 PIXEL OF _oDlg ACTION ( MD05ArqLog() )

    @120,170 BUTTON "Confirmar"     SIZE 040, 012 PIXEL OF _oDlg ACTION ( MD05Conf() )
    @120,220 BUTTON "Cancelar"      SIZE 040, 012 PIXEL OF _oDlg ACTION (_oDlg:End())

    Activate MsDialog _oDlg Centered

    _cArqLog       := ''
Return

//+-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Static Function MD05Conf()
    Local _cAlias   := GetNextAlias()
    Local _nReg     := 0
    Local _nRegAlt  := 0

    Local _cLog     := ''
    Local _cMsg     := 'Total de produtos alterados: #1 .' + CRLF
    Local _nHandle  := 0
    Local _cGrTrib  := ''

    Private _nTotal := 0

    If !Empty(_cArqLog)

        BeginSql Alias _cAlias
            SELECT   B1_COD         ,B1_ORIGEM      ,B1_GRTRIB      ,SB1.R_E_C_N_O_ AS B1_RECNO
                    ,B1_POSIPI      ,B1_EX_NCM      ,B1_TIPO        ,YD_XGRREVE
                    ,YD_TEC         ,YD_XGRTRIB     ,YD_XGRIMP      ,YD_PER_IPI
                FROM  %Table:SB1% SB1
                INNER JOIN %Table:SYD% SYD  ON  SYD.%NotDel%
                                            AND YD_FILIAL = %xFilial:SYD%
                                            AND B1_POSIPI = YD_TEC
                                            AND B1_EX_NCM = YD_EX_NCM
                WHERE   SB1.%NotDel%
                AND B1_FILIAL = %xFilial:SB1%
                AND B1_ORIGEM <> ''
            ORDER BY B1_COD
        EndSql

        Count To _nTotal
        ProcRegua(_nTotal)

        (_cAlias)->(DBGoTop())

        If (_cAlias)->(!EOF())
            While  (_cAlias)->(!EOF())
                IncProc('Atualizando produto ' + CValToChar(++_nReg) + ' de ' + CValToChar(_nTotal) + '.')

                SB1->(DbGoTo( (_cAlias)->B1_RECNO ))

                If SB1->(!EOF())
                    Do Case
                    Case (_cAlias)->B1_ORIGEM == '1'
                        _cGrTrib    := (_cAlias)->YD_XGRIMP

                    Case (_cAlias)->B1_ORIGEM == '8' .And. (_cAlias)->B1_TIPO == 'PA'
                        _cGrTrib    := (_cAlias)->YD_XGRTRIB

                    Case (_cAlias)->B1_ORIGEM $ '2|3|8'
                        _cGrTrib    := (_cAlias)->YD_XGRREVE

                    OtherWise
                        _cGrTrib    := (_cAlias)->YD_XGRTRIB
                    EndCase

                    If AllTrim((_cAlias)->B1_GRTRIB) <> AllTrim(_cGrTrib)
                        _nRegAlt++
                        If !_lSimulacao
                            RecLock('SB1',.F.)
                            SB1->B1_GRTRIB := _cGrTrib
                            SB1->(MsUnLock())
                        EndIf

                        _cLog   += 'Produto: '          + SB1->B1_COD;
                            + ' Tipo: '             + SB1->B1_TIPO;
                            + ' Origem: '               + SB1->B1_ORIGEM;
                            + ' NCM: '                  + (_cAlias)->B1_POSIPI;
                            + ' EX NCM: '               + (_cAlias)->B1_EX_NCM;
                            + ' Grp. Trib.: '       + (_cAlias)->B1_GRTRIB ;
                            + ' Grp. Trib. NOVO: '  + _cGrTrib;
                            + CRLF
                    EndIf
                EndIf

                (_cAlias)->(DbSkip())
            EndDo

            _nHandle    := FCREATE(_cArqLog)

            If _nHandle = -1
                _cMsg   += " Erro ao criar arquivo - ferror " + Str(Ferror())
            Else
                _cMsg += ' Verifique arquivo de log gerado: ' + CRLF + '#2 ' + CRLF
                FWrite(_nHandle, _cLog)
                FClose(_nHandle)
            EndIf
        EndIf

        Aviso('Atenção',I18N( _cMsg,{_nRegAlt,_cArqLog}),{'OK'},3)
    EndIf
Return

//+-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Static Function MD05ArqLog()
    Local _cArq     :=  cGetFile('*.TXT'    ,'Informe diretorio para arquivo de log'    ,0,'',.F.           ,nOR( GETF_LOCALHARD, GETF_LOCALFLOPPY, GETF_RETDIRECTORY ),.F., .T. )

    _cArqLog := _cArq + DToS(Date()) + '_' + (StrTran(Time(),':','')) + '.TXT'
Return

